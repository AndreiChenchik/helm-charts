---
apiVersion: apps/v1
{{- if .Values.volumePath }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: "{{ .Release.Name }}"
  namespace: "{{ .Release.Namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Release.Name }}"
      namespace: "{{ .Release.Namespace }}"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}"
        namespace: "{{ .Release.Namespace }}"
      annotations:
        {{ include "vaultinject.Annotations" . | indent 8 }}
    spec:
      {{ include "vaultinject.serviceAccountName" . | indent 6 }}
      {{- if .Values.initContainers }}
      initContainers:
{{ toYaml .Values.initContainers | indent 8}}
      {{- end }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      containers:
        - name: "{{ .Release.Name }}"
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{.Values.image.pullPolicy}}
          ports:
            - containerPort: {{ .Values.service.targetPort }}
          envFrom:  
            {{ include "vaultinject.envFrom" . | indent 12 }}
            {{- if .Values.config }}
            - configMapRef:
                name: "{{ .Release.Name }}"
            {{- end }}
            {{- if .Values.envSecrets }}
            - secretRef:
                name: {{ .Values.envSecrets }}
            {{- end }}
          {{- if .Values.volumePath }}
          volumeMounts:
          - name: {{ .Values.volumeName | default "data" }}
            mountPath: {{ .Values.volumePath }}
          {{- end }}
  {{- if .Values.volumePath }}
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 100Mi
  {{- end }}
