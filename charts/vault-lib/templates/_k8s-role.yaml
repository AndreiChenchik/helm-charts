{{- define "vault-lib.k8s-role-job" -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-k8s-role-config"
  namespace: "{{ .Values.vault.server.namespace }}"
data:
  check-vault-running.sh: |-
    #!/bin/ash
    for attempt in `seq 15`; do
      if [ "$attempt" -eq 15 ]; then
        echo "VAULT NOT REACHABLE"
        exit 1
      elif vault status; then
        echo "VAULT OK EXITING"
        exit 0
      elif [ "$?" = "2" ]; then
        echo "VAULT SEALED"
        exit 0
      else
        echo "sleeping for $attempt"
        sleep "$attempt"
      fi
    done
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-k8s-role"
  namespace: "{{ .Values.vault.server.namespace }}"
spec:
  backoffLimit: 0
  template:
    spec:
      initContainers:
        - name: check-vault-running
          image: "{{ .Values.vault.client.repository | default "vault" }}:{{ .Values.vault.client.version | default .Chart.AppVersion }}"
          command: ["/bin/check-vault-running.sh"]
          env:
            - name: VAULT_ADDR
              value: "{{ .Values.vault.server.url }}"
          volumeMounts:
            - name: scripts
              mountPath: /bin/check-vault-running.sh
              readOnly: true
              subPath: check-vault-running.sh
      containers:
        - name: do-vault-init
          image: "{{ .Values.vault.client.repository | default "vault" }}:{{ .Values.vault.client.version | default index .Subcharts "vault-lib" "Chart" "AppVersion" }}"
          command: ["/bin/check-vault-running.sh"]
          env:
            - name: VAULT_ADDR
              value: "{{ .Values.vault.server.url }}"
            {{- if .Values.vault.server.token.secretName }}
            - name: VAULT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.vault.server.token.secretName }}
                  key: {{ .Values.vault.server.token.secretKey }}
            {{- end }}
          volumeMounts:
            - name: scripts
              mountPath: /bin/check-vault-running.sh
              readOnly: true
              subPath: check-vault-running.sh
      restartPolicy: Never
      volumes:
        - name: scripts
          configMap:
            defaultMode: 0700
            name: "{{ .Release.Name }}-k8s-role-config"
{{- end -}}
