apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-{{ .Chart.Name }}"
  namespace: "{{ .Values.global.vault.server.namespace }}"
spec:
  backoffLimit: 0
  template:
    spec:
      initContainers:
        - name: check-vault-running
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["/bin/check-vault-running.sh"]
          env:
            - name: VAULT_ADDR
              value: "{{ .Values.global.vault.server.url }}"
          volumeMounts:
            - name: scripts
              mountPath: /bin/check-vault-running.sh
              readOnly: true
              subPath: check-vault-running.sh
      containers:
        - name: do-vault-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["/bin/check-vault-running.sh"]
          env:
            - name: VAULT_ADDR
              value: "{{ .Values.global.vault.server.url }}"
            {{- if .Value.global.vault.server.token.secretName }}
            - name: VAULT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Value.global.vault.server.token.secretName }}
                  key: {{ .Value.global.vault.server.token.secretKey }}
            {{- end }}
          volumeMounts:
            - name: scripts
              mountPath: /bin/check-vault-running.sh
              readOnly: true
              subPath: check-vault-running.sh
      restartPolicy: Never
      volumes:
        - name: scripts
          configMap:
            defaultMode: 0700
            name: "{{ .Release.Name }}-{{ .Chart.Name }}"
